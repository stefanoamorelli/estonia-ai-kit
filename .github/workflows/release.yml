name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    name: Release Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages
        run: npx nx run-many --target=build --all --parallel=3

      - name: Run tests
        run: npx nx run-many --target=test --all --parallel=3 || true

      - name: Configure npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Bump versions
        run: |
          # Bump version in all packages
          for pkg in mcp/*/package.json packages/*/package.json; do
            if [ -f "$pkg" ]; then
              echo "Bumping version in $pkg"
              cd $(dirname $pkg)
              npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
              cd -
            fi
          done

      - name: Publish packages
        run: |
          # Publish shared package first
          cd packages/shared
          npm publish --access public
          cd ../..

          # Publish MCP servers
          for dir in mcp/*; do
            if [ -d "$dir" ] && [ -f "$dir/package.json" ]; then
              echo "Publishing $dir"
              cd $dir
              npm publish --access public
              cd ../..
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        run: |
          VERSION=$(node -p "require('./mcp/rik/package.json').version")
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            ## ðŸš€ Release v${{ env.VERSION }}

            ### Packages Released:
            - @estonia-ai-kit/rik-mcp-server
            - @estonia-ai-kit/emta-mcp-server
            - @estonia-ai-kit/open-data-mcp-server
            - @estonia-ai-kit/shared
          draft: false
          prerelease: false
