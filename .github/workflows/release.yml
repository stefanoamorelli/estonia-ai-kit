name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write

jobs:
  release:
    name: Release Packages
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[release]'))
    
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages
        run: npx nx run-many --target=build --all --parallel=3

      - name: Run tests
        run: npx nx run-many --target=test --all --parallel=3

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Configure npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version packages (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          npx lerna version ${{ github.event.inputs.release_type }} \
            --yes \
            --no-private \
            --create-release github \
            --message "chore(release): publish %s [skip ci]"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: |
          npx lerna publish from-package \
            --yes \
            --no-private \
            --registry https://registry.npmjs.org/
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## ðŸš€ Release v${{ steps.version.outputs.version }}
            
            ### Packages Released:
            - @estonia-ai-kit/rik-mcp-server
            - @estonia-ai-kit/emta-mcp-server
            - @estonia-ai-kit/open-data-mcp-server
            - @estonia-ai-kit/shared
            
            See [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'prerelease' }}

  publish-success:
    name: Publish Success Notification
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.published == 'true'

    steps:
      - name: Notify success
        run: |
          echo "âœ… Successfully published packages to NPM!"
          echo "Published: ${{ needs.release.outputs.publishedPackages }}"